{"version":3,"file":"static/js/781.a0f21804.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","redux/contacts/selectors.js","redux/filter/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","checkExistingContact.js","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.js","components/ContactListItem/ContactListItem.styled.js","components/EditModal/EditModal.styled.js","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.js","components/EditModal/EditModal.js","components/ContactListItem/ContactListItem.js","components/Message/Message.styled.js","components/Message/Message.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.js","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.js","validation/formRegex.js","validation/schema.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  margin: 0 auto;\n  border: 6px solid ${p => p.theme.colors.secondary};\n  border-top: 6px solid ${p => p.theme.colors.bgc};\n  border-radius: 50%;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import { StyledLoader } from './Loader.styled';\n\nexport function Loader({ size = 20 }) {\n  return (\n    <StyledLoader\n      style={{ width: `${size}px`, height: `${size}px` }}\n    ></StyledLoader>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectIsDeleting = state => state.contacts.isDeleting;\nexport const selectIsAdding = state => state.contacts.isAdding;\nexport const selectIsEditing = state => state.contacts.isEditing;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.spacing(3)};\n  padding: ${p => p.theme.spacing(3)};\n  border-radius: ${p => p.theme.radii.sm};\n  box-shadow: ${p => p.theme.shadow};\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const FormField = styled(Form)`\n  max-width: 400px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n`;\n\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n`;\n\nexport const LabelName = styled.span`\n  display: block;\n  font-size: 14px;\n`;\n\nexport const InputWrapper = styled.span`\n  width: 100%;\n  position: relative;\n  svg {\n    position: absolute;\n    left: ${p => p.theme.spacing(2)};\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\nexport const Input = styled(Field)`\n  width: 100%;\n  display: block;\n  padding: 12px 40px;\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const Message = styled(ErrorMessage)`\n  font-size: 12px;\n  color: #ff5549;\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  min-width: 100px;\n  padding: ${p => p.theme.spacing(3)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n  font-size: 16px;\n  border: none;\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.bgc};\n  }\n\n  svg {\n    margin-left: ${p => p.theme.spacing(2)};\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectIsAdding } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { checkExistingName, checkExistingNumber } from 'checkExistingContact';\n\nimport { AiOutlineUser, AiOutlinePhone } from 'react-icons/ai';\nimport {\n  Container,\n  Title,\n  FormField,\n  Label,\n  LabelName,\n  InputWrapper,\n  Button,\n  Input,\n  Message,\n} from './ContactForm.styled';\nimport { contactSchema } from 'validation/schema';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isAdding = useSelector(selectIsAdding);\n\n  const handleSubmit = (contact, { resetForm }) => {\n    const isNameExist = checkExistingName(contacts, contact);\n    const isNumberExist = checkExistingNumber(contacts, contact);\n\n    if (!isNameExist && !isNumberExist) {\n      dispatch(addContact(contact));\n      resetForm();\n    }\n  };\n\n  return (\n    <Container>\n      <Title>Add new contact</Title>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={contactSchema}\n      >\n        <FormField autoComplete=\"off\">\n          <Label>\n            <LabelName>Name</LabelName>\n            <InputWrapper>\n              <AiOutlineUser size={20} />\n              <Input type=\"text\" name=\"name\" />\n            </InputWrapper>\n          </Label>\n          <Message name=\"name\" component=\"p\" />\n\n          <Label>\n            <LabelName>Number</LabelName>\n            <InputWrapper>\n              <AiOutlinePhone size={20} />\n              <Input type=\"tel\" name=\"number\" />\n            </InputWrapper>\n          </Label>\n          <Message name=\"number\" component=\"p\" />\n\n          <Button type=\"submit\">\n            {isAdding ? <Loader size={20} /> : 'Add'}\n          </Button>\n        </FormField>\n      </Formik>\n    </Container>\n  );\n};\n","import toast from 'react-hot-toast';\n\nconst checkContactName = (contactList, name) => {\n  return contactList.find(\n    contact => contact.name.toLowerCase() === name.trim().toLowerCase()\n  );\n};\n\nconst checkContactNumber = (contactList, number) => {\n  const regex = /\\D/g;\n  return contactList.find(\n    contact =>\n      contact.number.replace(regex, '') === number.trim().replace(regex, '')\n  );\n};\n\nexport function checkExistingName(contactList, contact) {\n  const isNameInContactList = checkContactName(contactList, contact.name);\n\n  if (isNameInContactList) {\n    toast.error(`${contact.name} is already in contacts`);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function checkExistingNumber(contactList, contact) {\n  const isNumberInContactList = checkContactNumber(contactList, contact.number);\n  if (isNumberInContactList) {\n    toast.error(\n      `This number is already saved in contacts as ${isNumberInContactList.name}`\n    );\n    return true;\n  } else {\n    return false;\n  }\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const LabelName = styled.span`\n  margin-right: ${p => p.theme.spacing(2)};\n`;\n\nexport const InputWrapper = styled.span`\n  position: relative;\n  svg {\n    position: absolute;\n    right: ${p => p.theme.spacing(2)};\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const Input = styled.input`\n  max-width: 360px;\n  padding: 12px 40px 12px 12px;\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeNameFilter } from 'redux/filter/slice';\n\nimport {\n  Wrapper,\n  LabelName,\n  InputWrapper,\n  Input,\n} from './ContactFilter.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport function ContactFilter() {\n  const dispatch = useDispatch();\n  return (\n    <Wrapper>\n      <label>\n        <LabelName>Find contacts by name</LabelName>\n        <InputWrapper>\n          <Input\n            name=\"filter\"\n            placeholder=\"Enter name...\"\n            type=\"text\"\n            onChange={e => {\n              dispatch(changeNameFilter(e.target.value));\n            }}\n          />\n          <AiOutlineSearch size={20} />\n        </InputWrapper>\n      </label>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  position: relative;\n  min-width: 500px;\n  padding: ${p => p.theme.spacing(3)};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: ${p => p.theme.spacing(2)};\n\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const Name = styled.span`\n  font-weight: bold;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n  font-size: 16px;\n  line-height: 1.19;\n  letter-spacing: 0.03em;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n`;\n\nexport const Button = styled.button`\n  padding: ${p => p.theme.spacing(1)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  cursor: pointer;\n  border: none;\n  border-radius: ${p => p.theme.radii.sm};\n  transition: background-color 250ms linear;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.bgc};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1200;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: ${p => p.theme.colors.bgc};\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  padding: 0;\n  top: 8px;\n  right: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.bgc};\n  }\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormField = styled(Form)`\n  padding: 20px 40px;\n  max-width: 460px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n  border-radius: ${p => p.theme.radii.sm};\n  background-color: ${p => p.theme.colors.light};\n`;\n\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n`;\n\nexport const LabelName = styled.span`\n  display: block;\n  font-size: 14px;\n`;\n\nexport const InputWrapper = styled.span`\n  width: 100%;\n  position: relative;\n  svg {\n    position: absolute;\n    left: ${p => p.theme.spacing(2)};\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\nexport const Input = styled(Field)`\n  width: 100%;\n  display: block;\n  padding: 12px 40px;\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const Message = styled(ErrorMessage)`\n  font-size: 12px;\n  color: #ff5549;\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  min-width: 140px;\n  padding: ${p => p.theme.spacing(3)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n  font-size: 16px;\n  border: none;\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.bgc};\n  }\n\n  svg {\n    margin-left: ${p => p.theme.spacing(2)};\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport { contactSchema } from 'validation/schema';\nimport {\n  Button,\n  FormField,\n  Input,\n  InputWrapper,\n  Label,\n  LabelName,\n  Message,\n} from './EditForm.styled';\nimport { AiOutlineUser, AiOutlinePhone } from 'react-icons/ai';\nimport toast from 'react-hot-toast';\n\nexport function EditForm({ contact, onModalClose }) {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (editedContact, { resetForm }) => {\n    const isNotChanged =\n      editedContact.name === contact.name &&\n      editedContact.number === contact.number;\n\n    if (isNotChanged) {\n      toast.error('Please, change something...');\n      return;\n    }\n\n    const editData = { id: contact.id, ...editedContact };\n    dispatch(editContact(editData));\n    resetForm();\n    onModalClose();\n  };\n  return (\n    <Formik\n      initialValues={{ name: contact.name, number: contact.number }}\n      validationSchema={contactSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormField>\n        <Label>\n          <LabelName>Name</LabelName>\n          <InputWrapper>\n            <AiOutlineUser size={20} />\n            <Input type=\"text\" name=\"name\" autoFocus />\n          </InputWrapper>\n        </Label>\n        <Message name=\"name\" component=\"p\" />\n        <Label>\n          <LabelName>Number</LabelName>\n          <InputWrapper>\n            <AiOutlinePhone size={20} />\n            <Input type=\"tel\" name=\"number\" />\n          </InputWrapper>\n        </Label>\n        <Message name=\"number\" component=\"p\" />\n        <Button type=\"submit\">Edit</Button>\n      </FormField>\n    </Formik>\n  );\n}\n","import { useEffect } from 'react';\nimport { Overlay, Button, Wrapper } from './EditModal.styled';\nimport { IoCloseCircleOutline } from 'react-icons/io5';\nimport { EditForm } from 'components/EditForm/EditForm';\n\nexport function EditModal({ onModalClose, contact }) {\n  useEffect(() => {\n    const onEscPressKey = e => {\n      if (e.code === 'Escape') {\n        onModalClose();\n      }\n    };\n\n    window.addEventListener('keydown', onEscPressKey);\n\n    return () => {\n      window.removeEventListener('keydown', onEscPressKey);\n    };\n  }, [onModalClose]);\n\n  return (\n    <Overlay>\n      <Wrapper>\n        <EditForm contact={contact} onModalClose={onModalClose} />\n        <Button type=\"button\" onClick={onModalClose}>\n          <IoCloseCircleOutline size={30} />\n        </Button>\n      </Wrapper>\n    </Overlay>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectIsDeleting, selectIsEditing } from 'redux/contacts/selectors';\n\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\nimport {\n  Button,\n  Item,\n  Name,\n  ButtonWrapper,\n  InfoWrapper,\n} from './ContactListItem.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport { EditModal } from 'components/EditModal/EditModal';\n\nexport function ContactListItem(contact) {\n  const isEditing = useSelector(selectIsEditing);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const isDeleting = useSelector(selectIsDeleting);\n  const isDeletingItem = isDeleting.status && isDeleting.id === contact.id;\n  const isEditingItem = isEditing.status && isEditing.id === contact.id;\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Item>\n        <InfoWrapper>\n          <Name>{contact.name}</Name>\n          <span>{contact.number}</span>\n        </InfoWrapper>\n        <ButtonWrapper>\n          <Button type=\"button\" onClick={handleModalOpen}>\n            {isEditingItem ? <Loader size={20} /> : <AiOutlineEdit size={20} />}\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            {isDeletingItem ? (\n              <Loader size={20} />\n            ) : (\n              <AiOutlineDelete size={20} />\n            )}\n          </Button>\n        </ButtonWrapper>\n      </Item>\n      {isModalOpen && (\n        <EditModal onModalClose={handleModalClose} contact={contact} />\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledMessage = styled.p`\n  text-align: center;\n  font-weight: bold;\n`;\n","import { StyledMessage } from './Message.styled';\n\nexport function Message({ children }) {\n  return <StyledMessage>{children}</StyledMessage>;\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(3)};\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\n\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { Message } from 'components/Message/Message';\n\nimport { List } from './ContactList.styled';\n\nexport function ContactList() {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return !visibleContacts.length && !isLoading ? (\n    <Message>No contacts found</Message>\n  ) : (\n    <List>\n      {visibleContacts.map(contact => (\n        <ContactListItem key={contact.id} {...contact} />\n      ))}\n    </List>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const ContactSort = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n`;\nexport const Button = styled.button`\n  min-width: 30px;\n  padding: ${p => p.theme.spacing(2)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  border: none;\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.bgc};\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { sortAscName, sortDescName } from 'redux/contacts/slice';\n\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Message } from 'components/Message/Message';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { Button, Title, ContactSort } from './Contacts.styled';\nimport {\n  AiOutlineSortAscending,\n  AiOutlineSortDescending,\n} from 'react-icons/ai';\n\nexport function Contacts() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Title>Contacts</Title>\n      <ContactFilter />\n      <ContactSort>\n        Sort by name\n        <Button onClick={() => dispatch(sortAscName())}>\n          <AiOutlineSortAscending size={20} />\n        </Button>\n        <Button onClick={() => dispatch(sortDescName())}>\n          <AiOutlineSortDescending size={20} />\n        </Button>\n      </ContactSort>\n\n      {isLoading && <Loader size={20} />}\n\n      {!contacts.length && !isLoading ? (\n        <Message>No contacts yet</Message>\n      ) : (\n        <ContactList />\n      )}\n      {error && <p>{error}</p>}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.spacing(3)};\n  padding: ${p => p.theme.spacing(3)};\n`;\n","import { Helmet } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Container } from './ContactsPage.styled';\n\nexport default function ContactsPage() {\n  return (\n    <Container>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Contacts />\n    </Container>\n  );\n}\n","export const regex = {\n  name: {\n    regex: /^[a-zA-Zа-яА-Я.]+(([' -][a-zA-Zа-яА-Я. ])?[a-zA-Zа-яА-Я.]*)*$/,\n    errorMessage:\n      \"Name may contain only letters, apostrophe, dash, dot and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n  number: {\n    regex:\n      /\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/,\n    errorMessage:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  },\n};\n","import * as yup from 'yup';\nimport { regex } from './formRegex';\n\nexport const contactSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Enter at least 3 characters')\n    .max(30, 'Too Long')\n    .trim()\n    .matches(regex.name.regex, regex.name.errorMessage)\n    .required('Required'),\n  number: yup\n    .string()\n    .min(6, 'Enter at least 6 characters')\n    .max(20, 'Too Long')\n    .trim()\n    .matches(regex.number.regex, regex.number.errorMessage)\n    .required('Required'),\n});\n\nexport const logInSchema = yup.object().shape({\n  email: yup.string().email('Enter a valid email').trim().required('Required'),\n  password: yup.string().trim().required('Required'),\n});\n\nexport const registerSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Enter at least 3 characters')\n    .max(25, 'Too Long')\n    .trim()\n    .required('Required'),\n  email: yup.string().email('Enter a valid email').trim().required('Required'),\n  password: yup\n    .string()\n    .min(7, 'Enter at least 7 characters')\n    .trim()\n    .required('Required'),\n});\n"],"names":["StyledLoader","styled","p","theme","colors","secondary","bgc","Loader","size","style","width","height","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectIsDeleting","isDeleting","selectIsAdding","isAdding","selectIsEditing","isEditing","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","Container","spacing","radii","sm","shadow","Title","FormField","Form","Label","LabelName","InputWrapper","Input","Field","border","Message","ErrorMessage","Button","ContactForm","dispatch","useDispatch","useSelector","initialValues","number","onSubmit","resetForm","isNameExist","contactList","isNameInContactList","find","trim","checkContactName","toast","checkExistingName","isNumberExist","isNumberInContactList","regex","replace","checkContactNumber","checkExistingNumber","addContact","validationSchema","contactSchema","autoComplete","type","component","Wrapper","ContactFilter","placeholder","onChange","e","changeNameFilter","target","value","Item","Name","InfoWrapper","ButtonWrapper","Overlay","light","EditForm","onModalClose","editedContact","editData","id","editContact","autoFocus","EditModal","useEffect","onEscPressKey","code","window","addEventListener","removeEventListener","onClick","ContactListItem","useState","isModalOpen","setIsModalOpen","isDeletingItem","status","isEditingItem","deleteContact","StyledMessage","children","List","ContactList","visibleContacts","length","map","ContactSort","Contacts","fetchContacts","sortAscName","sortDescName","ContactsPage","errorMessage","yup","shape","min","max","matches","required","logInSchema","email","password","registerSchema"],"sourceRoot":""}