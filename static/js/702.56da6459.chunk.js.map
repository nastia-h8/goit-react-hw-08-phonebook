{"version":3,"file":"static/js/702.56da6459.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","redux/filter/selectors.js","checkExistingContact.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.js","components/ContactListItem/ContactListItem.styled.js","components/EditModal/EditModal.styled.js","components/EditForm/EditForm.js","components/EditModal/EditModal.js","components/ContactListItem/ContactListItem.js","components/Message/Message.styled.js","components/Message/Message.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.js","pages/ContactsPage.js","validation/formRegex.js","validation/schema.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectIsDeleting = state => state.contacts.isDeleting;\nexport const selectIsAdding = state => state.contacts.isAdding;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","export const selectFilter = state => state.filter;\n","import toast from 'react-hot-toast';\n\nconst checkContactName = (contactList, name) => {\n  return contactList.find(\n    contact => contact.name.toLowerCase() === name.trim().toLowerCase()\n  );\n};\n\nconst checkContactNumber = (contactList, number) => {\n  const regex = /\\D/g;\n  return contactList.find(\n    contact =>\n      contact.number.replace(regex, '') === number.trim().replace(regex, '')\n  );\n};\n\nexport function checkExistingName(contactList, contact) {\n  const isNameInContactList = checkContactName(contactList, contact.name);\n\n  if (isNameInContactList) {\n    toast.error(`${contact.name} is already in contacts`);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function checkExistingNumber(contactList, contact) {\n  const isNumberInContactList = checkContactNumber(contactList, contact.number);\n  if (isNumberInContactList) {\n    toast.error(\n      `This number is already saved in contacts as ${isNumberInContactList.name}`\n    );\n    return true;\n  } else {\n    return false;\n  }\n}\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormField = styled(Form)`\n  max-width: 400px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n`;\n\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n`;\n\nexport const LabelName = styled.span`\n  display: block;\n  font-size: 14px;\n`;\n\nexport const InputWrapper = styled.span`\n  width: 100%;\n  position: relative;\n  svg {\n    position: absolute;\n    left: ${p => p.theme.spacing(2)};\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\nexport const Input = styled(Field)`\n  width: 100%;\n  display: block;\n  padding: 12px 40px;\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const Message = styled(ErrorMessage)`\n  font-size: 12px;\n  color: #ff5549;\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  min-width: 140px;\n  padding: ${p => p.theme.spacing(3)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n  font-size: 16px;\n  border: none;\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.bgc};\n  }\n\n  svg {\n    margin-left: ${p => p.theme.spacing(2)};\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectIsAdding } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { checkExistingName, checkExistingNumber } from 'checkExistingContact';\n\nimport { AiOutlineUser, AiOutlinePhone } from 'react-icons/ai';\nimport {\n  FormField,\n  Label,\n  LabelName,\n  InputWrapper,\n  Button,\n  Input,\n  Message,\n} from './ContactForm.styled';\nimport { contactSchema } from 'validation/schema';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isAdding = useSelector(selectIsAdding);\n\n  const handleSubmit = (contact, { resetForm }) => {\n    const isNameExist = checkExistingName(contacts, contact);\n    const isNumberExist = checkExistingNumber(contacts, contact);\n\n    if (!isNameExist && !isNumberExist) {\n      dispatch(addContact(contact));\n      resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={handleSubmit}\n      validationSchema={contactSchema}\n    >\n      <FormField autoComplete=\"off\">\n        <Label>\n          <LabelName>Name</LabelName>\n          <InputWrapper>\n            <AiOutlineUser size={20} />\n            <Input type=\"text\" name=\"name\" />\n          </InputWrapper>\n        </Label>\n        <Message name=\"name\" component=\"p\" />\n\n        <Label>\n          <LabelName>Number</LabelName>\n          <InputWrapper>\n            <AiOutlinePhone size={20} />\n            <Input type=\"tel\" name=\"number\" />\n          </InputWrapper>\n        </Label>\n        <Message name=\"number\" component=\"p\" />\n\n        <Button type=\"submit\">{isAdding ? 'Adding...' : 'Add contact'}</Button>\n      </FormField>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const LabelName = styled.span`\n  margin-right: ${p => p.theme.spacing(2)};\n`;\n\nexport const InputWrapper = styled.span`\n  position: relative;\n  svg {\n    position: absolute;\n    right: ${p => p.theme.spacing(2)};\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const Input = styled.input`\n  max-width: 360px;\n  padding: 12px 40px 12px 12px;\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeNameFilter } from 'redux/filter/slice';\n\nimport {\n  Wrapper,\n  LabelName,\n  InputWrapper,\n  Input,\n} from './ContactFilter.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport function ContactFilter() {\n  const dispatch = useDispatch();\n  return (\n    <Wrapper>\n      <label>\n        <LabelName>Find contacts by name</LabelName>\n        <InputWrapper>\n          <Input\n            name=\"filter\"\n            placeholder=\"Enter name...\"\n            type=\"text\"\n            onChange={e => {\n              dispatch(changeNameFilter(e.target.value));\n            }}\n          />\n          <AiOutlineSearch size={20} />\n        </InputWrapper>\n      </label>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  position: relative;\n  min-width: 500px;\n  padding: ${p => p.theme.spacing(3)};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* flex-direction: column; */\n  gap: ${p => p.theme.spacing(2)};\n\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const Name = styled.span`\n  font-weight: bold;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n  font-size: 16px;\n  line-height: 1.19;\n  letter-spacing: 0.03em;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n`;\n\nexport const Button = styled.button`\n  /* min-width: 60px; */\n  padding: ${p => p.theme.spacing(1)};\n  /* position: absolute;\n  right: ${p => p.theme.spacing(2)};\n  bottom: ${p => p.theme.spacing(2)}; */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  cursor: pointer;\n  border: none;\n  border-radius: ${p => p.theme.radii.sm};\n  transition: background-color 250ms linear;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.bgc};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1200;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: ${p => p.theme.colors.bgc};\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  background-color: transparent;\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.bgc};\n    color: ${p => p.theme.colors.light};\n  }\n`;\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { contactSchema } from 'validation/schema';\nimport { checkExistingName } from 'checkExistingContact';\n\nexport function EditForm({ contact, onModalClose }) {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (editedContact, { resetForm }) => {\n    const isNameExist = checkExistingName(contacts, editedContact);\n    if (!isNameExist) {\n      const editData = { id: contact.id, ...editedContact };\n      dispatch(editContact(editData));\n      resetForm();\n      onModalClose();\n    }\n  };\n  return (\n    <Formik\n      initialValues={{ name: contact.name, number: contact.number }}\n      validationSchema={contactSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form style={{ display: 'flex', flexDirection: 'column' }}>\n        <label>\n          Name\n          <Field type=\"text\" name=\"name\" />\n        </label>\n        <ErrorMessage name=\"name\" component=\"p\" />\n        <label>\n          Number\n          <Field type=\"tel\" name=\"number\" />\n        </label>\n        <ErrorMessage name=\"number\" component=\"p\" />\n        <button type=\"submit\" style={{ margin: '0 auto' }}>\n          Edit\n        </button>\n      </Form>\n    </Formik>\n  );\n}\n","import { useEffect } from 'react';\nimport { Overlay, Button } from './EditModal.styled';\nimport { IoCloseCircleOutline } from 'react-icons/io5';\nimport { EditForm } from 'components/EditForm/EditForm';\n\nexport function EditModal({ onModalClose, contact }) {\n  useEffect(() => {\n    const onEscPressKey = e => {\n      if (e.code === 'Escape') {\n        onModalClose();\n      }\n    };\n\n    window.addEventListener('keydown', onEscPressKey);\n\n    return () => {\n      window.removeEventListener('keydown', onEscPressKey);\n    };\n  }, [onModalClose]);\n\n  return (\n    <Overlay>\n      <EditForm contact={contact} onModalClose={onModalClose} />\n      <Button type=\"button\" onClick={onModalClose}>\n        <IoCloseCircleOutline size={30} />\n      </Button>\n    </Overlay>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectIsDeleting } from 'redux/contacts/selectors';\n\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\nimport {\n  Button,\n  Item,\n  Name,\n  ButtonWrapper,\n  InfoWrapper,\n} from './ContactListItem.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport { EditModal } from 'components/EditModal/EditModal';\n\nexport function ContactListItem(contact) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const isDeleting = useSelector(selectIsDeleting);\n  const isDeletingItem = isDeleting.status && isDeleting.id === contact.id;\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Item>\n        <InfoWrapper>\n          <Name>{contact.name}</Name>\n          <span>{contact.number}</span>\n        </InfoWrapper>\n        <ButtonWrapper>\n          <Button type=\"button\" onClick={handleModalOpen}>\n            {<AiOutlineEdit size={20} />}\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            {isDeletingItem ? (\n              <Loader size={20} />\n            ) : (\n              <AiOutlineDelete size={20} />\n            )}\n          </Button>\n        </ButtonWrapper>\n      </Item>\n      {isModalOpen && (\n        <EditModal onModalClose={handleModalClose} contact={contact} />\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledMessage = styled.p`\n  text-align: center;\n  font-weight: bold;\n`;\n","import { StyledMessage } from './Message.styled';\n\nexport function Message({ children }) {\n  return <StyledMessage>{children}</StyledMessage>;\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  /* flex-wrap: wrap; */\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(3)};\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\n\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { Message } from 'components/Message/Message';\n\nimport { List } from './ContactList.styled';\n\nexport function ContactList() {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return !visibleContacts.length && !isLoading ? (\n    <Message>No contacts found</Message>\n  ) : (\n    <List>\n      {visibleContacts.map(contact => (\n        <ContactListItem key={contact.id} {...contact} />\n      ))}\n    </List>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const ContactSort = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n`;\nexport const Button = styled.button`\n  min-width: 30px;\n  padding: ${p => p.theme.spacing(2)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  border: none;\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.bgc};\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { sortAscName, sortDescName } from 'redux/contacts/slice';\n\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Message } from 'components/Message/Message';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { Button, Title, ContactSort } from './Contacts.styled';\nimport {\n  AiOutlineSortAscending,\n  AiOutlineSortDescending,\n} from 'react-icons/ai';\n\nexport function Contacts() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Title>Contacts</Title>\n      <ContactFilter />\n      <ContactSort>\n        Sort by name\n        <Button onClick={() => dispatch(sortAscName())}>\n          <AiOutlineSortAscending size={20} />\n        </Button>\n        <Button onClick={() => dispatch(sortDescName())}>\n          <AiOutlineSortDescending size={20} />\n        </Button>\n      </ContactSort>\n\n      {isLoading && <Loader size={20} />}\n\n      {!contacts.length && !isLoading ? (\n        <Message>No contacts yet</Message>\n      ) : (\n        <ContactList />\n      )}\n      {error && <p>{error}</p>}\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Contacts } from 'components/Contacts/Contacts';\n\nexport default function ContactsPage() {\n  return (\n    <div>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Contacts />\n    </div>\n  );\n}\n","export const regex = {\n  name: {\n    regex: /^[a-zA-Zа-яА-Я.]+(([' -][a-zA-Zа-яА-Я. ])?[a-zA-Zа-яА-Я.]*)*$/,\n    errorMessage:\n      \"Name may contain only letters, apostrophe, dash, dot and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n  number: {\n    regex:\n      /\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/,\n    errorMessage:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  },\n};\n","import * as yup from 'yup';\nimport { regex } from './formRegex';\n\nexport const contactSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Enter at least 3 characters')\n    .max(30, 'Too Long')\n    .trim()\n    .matches(regex.name.regex, regex.name.errorMessage)\n    .required('Required'),\n  number: yup\n    .string()\n    .min(6, 'Enter at least 6 characters')\n    .max(20, 'Too Long')\n    .trim()\n    .matches(regex.number.regex, regex.number.errorMessage)\n    .required('Required'),\n});\n\nexport const logInSchema = yup.object().shape({\n  email: yup.string().email('Enter a valid email').trim().required('Required'),\n  password: yup.string().trim().required('Required'),\n});\n\nexport const registerSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Enter at least 3 characters')\n    .max(25, 'Too Long')\n    .trim()\n    .required('Required'),\n  email: yup.string().email('Enter a valid email').trim().required('Required'),\n  password: yup\n    .string()\n    .min(7, 'Enter at least 7 characters')\n    .trim()\n    .required('Required'),\n});\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectIsDeleting","isDeleting","selectIsAdding","isAdding","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","checkExistingName","contactList","isNameInContactList","find","trim","checkContactName","toast","FormField","styled","Form","p","theme","spacing","Label","LabelName","InputWrapper","Input","Field","colors","border","radii","sm","Message","ErrorMessage","Button","bgc","ContactForm","dispatch","useDispatch","useSelector","initialValues","number","onSubmit","resetForm","isNameExist","isNumberExist","isNumberInContactList","regex","replace","checkContactNumber","checkExistingNumber","addContact","validationSchema","contactSchema","autoComplete","size","type","component","Wrapper","ContactFilter","placeholder","onChange","e","changeNameFilter","target","value","Item","Name","InfoWrapper","ButtonWrapper","Overlay","light","EditForm","onModalClose","editedContact","editData","id","editContact","style","display","flexDirection","margin","EditModal","useEffect","onEscPressKey","code","window","addEventListener","removeEventListener","onClick","ContactListItem","useState","isModalOpen","setIsModalOpen","isDeletingItem","status","deleteContact","Loader","StyledMessage","children","List","ContactList","visibleContacts","length","map","Title","ContactSort","Contacts","fetchContacts","sortAscName","sortDescName","ContactsPage","errorMessage","yup","shape","min","max","matches","required","logInSchema","email","password","registerSchema"],"sourceRoot":""}