{"version":3,"file":"static/js/782.dcd8a3f1.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","redux/filter/selectors.js","formRegex.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","checkExistingContact.js","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","components/Message/Message.styled.js","components/Message/Message.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.js","pages/ContactsPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectIsDeleting = state => state.contacts.isDeleting;\nexport const selectIsAdding = state => state.contacts.isAdding;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","export const selectFilter = state => state.filter;\n","export const regex = {\n  name: {\n    regex: /^[a-zA-Zа-яА-Я.]+(([' -][a-zA-Zа-яА-Я. ])?[a-zA-Zа-яА-Я.]*)*$/,\n    errorMessage:\n      \"Name may contain only letters, apostrophe, dash, dot and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n  number: {\n    regex:\n      /\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/,\n    errorMessage:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  },\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormField = styled(Form)`\n  max-width: 400px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n`;\n\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n`;\n\nexport const LabelName = styled.span`\n  display: block;\n  font-size: 14px;\n`;\n\nexport const InputWrapper = styled.span`\n  width: 100%;\n  position: relative;\n  svg {\n    position: absolute;\n    left: ${p => p.theme.spacing(2)};\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\nexport const Input = styled(Field)`\n  width: 100%;\n  display: block;\n  padding: 12px 40px;\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const Message = styled(ErrorMessage)`\n  font-size: 12px;\n  color: #ff5549;\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  min-width: 140px;\n  padding: ${p => p.theme.spacing(3)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n  font-size: 16px;\n  border: none;\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.bgc};\n  }\n\n  svg {\n    margin-left: ${p => p.theme.spacing(2)};\n  }\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectIsAdding } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { regex } from 'formRegex';\nimport { checkContactName, checkContactNumber } from 'checkExistingContact';\n\nimport { AiOutlineUser, AiOutlinePhone } from 'react-icons/ai';\nimport {\n  FormField,\n  Label,\n  LabelName,\n  InputWrapper,\n  Button,\n  Input,\n  Message,\n} from './ContactForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Enter at least 3 characters')\n    .max(25, 'Too Long')\n    .trim()\n    .matches(regex.name.regex, regex.name.errorMessage)\n    .required('Required'),\n  number: yup\n    .string()\n    .min(6, 'Enter at least 6 characters')\n    .max(20, 'Too Long')\n    .trim()\n    .matches(regex.number.regex, regex.number.errorMessage)\n    .required('Required'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isAdding = useSelector(selectIsAdding);\n\n  const handleSubmit = (contact, { resetForm }) => {\n    const isNameInContactList = checkContactName(contacts, contact.name);\n    const isNumberInContactList = checkContactNumber(contacts, contact.number);\n\n    if (isNameInContactList) {\n      toast.error(`${contact.name} is already in contacts`);\n    } else if (isNumberInContactList) {\n      toast.error(\n        `This number is already saved in contacts as ${isNumberInContactList.name}`\n      );\n    } else {\n      dispatch(addContact(contact));\n      resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <FormField autoComplete=\"off\">\n        <Label>\n          <LabelName>Name</LabelName>\n          <InputWrapper>\n            <AiOutlineUser size={20} />\n            <Input type=\"text\" name=\"name\" />\n          </InputWrapper>\n        </Label>\n        <Message name=\"name\" component=\"p\" />\n\n        <Label>\n          <LabelName>Number</LabelName>\n          <InputWrapper>\n            <AiOutlinePhone size={20} />\n            <Input type=\"tel\" name=\"number\" />\n          </InputWrapper>\n        </Label>\n        <Message name=\"number\" component=\"p\" />\n\n        <Button type=\"submit\">{isAdding ? 'Adding...' : 'Add contact'}</Button>\n      </FormField>\n    </Formik>\n  );\n};\n","export const checkContactName = (contactList, name) => {\n  return contactList.find(\n    contact => contact.name.toLowerCase() === name.trim().toLowerCase()\n  );\n};\n\nexport const checkContactNumber = (contactList, number) => {\n  const regex = /\\D/g;\n  return contactList.find(\n    contact =>\n      contact.number.replace(regex, '') === number.trim().replace(regex, '')\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const LabelName = styled.span`\n  margin-right: ${p => p.theme.spacing(2)};\n`;\n\nexport const InputWrapper = styled.span`\n  position: relative;\n  svg {\n    position: absolute;\n    right: ${p => p.theme.spacing(2)};\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const Input = styled.input`\n  max-width: 360px;\n  padding: 12px 40px 12px 12px;\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeNameFilter } from 'redux/filter/slice';\n\nimport {\n  Wrapper,\n  LabelName,\n  InputWrapper,\n  Input,\n} from './ContactFilter.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport function ContactFilter() {\n  const dispatch = useDispatch();\n  return (\n    <Wrapper>\n      <label>\n        <LabelName>Find contacts by name</LabelName>\n        <InputWrapper>\n          <Input\n            name=\"filter\"\n            placeholder=\"Enter name...\"\n            type=\"text\"\n            onChange={e => {\n              dispatch(changeNameFilter(e.target.value));\n            }}\n          />\n          <AiOutlineSearch size={20} />\n        </InputWrapper>\n      </label>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  position: relative;\n  min-width: 260px;\n  padding: ${p => p.theme.spacing(3)};\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(2)};\n\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const Name = styled.span`\n  font-weight: bold;\n`;\n\nexport const NumberWrapper = styled.span`\n  font-size: 14px;\n`;\n\nexport const Button = styled.button`\n  padding: ${p => p.theme.spacing(1)};\n  position: absolute;\n  right: ${p => p.theme.spacing(2)};\n  bottom: ${p => p.theme.spacing(2)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  cursor: pointer;\n  border: none;\n  border-radius: ${p => p.theme.radii.sm};\n  background-color: transparent;\n  transition: background-color 250ms linear;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.bgc};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectIsDeleting } from 'redux/contacts/selectors';\n\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { Button, Item, Name, NumberWrapper } from './ContactListItem.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport function ContactListItem(contact) {\n  const dispatch = useDispatch();\n  const isDeleting = useSelector(selectIsDeleting);\n  const isDeletingItem = isDeleting.status && isDeleting.id === contact.id;\n\n  return (\n    <Item>\n      <Name>{contact.name}</Name>\n      <NumberWrapper>\n        <span>Number: </span>\n        {contact.number}\n      </NumberWrapper>\n\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(contact.id))}>\n        {isDeletingItem ? <Loader size={20} /> : <AiOutlineDelete size={20} />}\n      </Button>\n    </Item>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledMessage = styled.p`\n  text-align: center;\n  font-weight: bold;\n`;\n","import { StyledMessage } from './Message.styled';\n\nexport function Message({ children }) {\n  return <StyledMessage>{children}</StyledMessage>;\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(3)};\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\n\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { Message } from 'components/Message/Message';\n\nimport { List } from './ContactList.styled';\n\nexport function ContactList() {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return !visibleContacts.length && !isLoading ? (\n    <Message>No contacts found</Message>\n  ) : (\n    <List>\n      {visibleContacts.map(contact => (\n        <ContactListItem key={contact.id} {...contact} />\n      ))}\n    </List>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const ContactSort = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(2)};\n`;\nexport const Button = styled.button`\n  min-width: 30px;\n  padding: ${p => p.theme.spacing(2)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  border: none;\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.bgc};\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { sortAscName, sortDescName } from 'redux/contacts/slice';\n\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Message } from 'components/Message/Message';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { Button, Title, ContactSort } from './Contacts.styled';\nimport {\n  AiOutlineSortAscending,\n  AiOutlineSortDescending,\n} from 'react-icons/ai';\n\nexport function Contacts() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Title>Contacts</Title>\n      <ContactFilter />\n      <ContactSort>\n        Sort by name\n        <Button onClick={() => dispatch(sortAscName())}>\n          <AiOutlineSortAscending size={20} />\n        </Button>\n        <Button onClick={() => dispatch(sortDescName())}>\n          <AiOutlineSortDescending size={20} />\n        </Button>\n      </ContactSort>\n\n      {isLoading && <Loader size={20} />}\n\n      {!contacts.length && !isLoading ? (\n        <Message>No contacts yet</Message>\n      ) : (\n        <ContactList />\n      )}\n      {error && <p>{error}</p>}\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Contacts } from 'components/Contacts/Contacts';\n\nexport default function ContactsPage() {\n  return (\n    <div>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Contacts />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectIsDeleting","isDeleting","selectIsAdding","isAdding","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","regex","errorMessage","FormField","styled","Form","p","theme","spacing","Label","LabelName","InputWrapper","Input","Field","colors","border","radii","sm","Message","ErrorMessage","Button","bgc","schema","yup","shape","min","max","trim","matches","required","number","initialValues","ContactForm","dispatch","useDispatch","useSelector","onSubmit","contactList","resetForm","isNameInContactList","find","isNumberInContactList","replace","checkContactNumber","toast","addContact","validationSchema","autoComplete","size","type","component","Wrapper","ContactFilter","placeholder","onChange","e","changeNameFilter","target","value","Item","Name","NumberWrapper","ContactListItem","isDeletingItem","status","id","onClick","deleteContact","Loader","StyledMessage","children","List","ContactList","visibleContacts","length","map","Title","ContactSort","Contacts","useEffect","fetchContacts","sortAscName","sortDescName","ContactsPage","Helmet"],"sourceRoot":""}